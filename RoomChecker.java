package Nonhotel;

import DB.Database;
import DB.JavaDataBase;
import GUI.MainMenu;
import GUI.MenuBuscar;
import GUI.ReservationInterface;
import HotelRelated.Cuarto;
import HotelRelated.Room;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
//ESTA CLASE REDIRIGE A RESERVATIONSINTERFACE
public class RoomChecker extends javax.swing.JFrame implements Database {

    /**
     * Creates new form ShowHosts
     */
    public RoomChecker() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        setTitle("Consultar Cuartos");
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CheckRoom = new javax.swing.JButton();
        Checkin = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Tipo de cuarto");
        //jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {String.valueOf(Cuarto.SUITE), String.valueOf(Cuarto.SINGLE), String.valueOf(Cuarto.KING), String.valueOf(Cuarto.QUEEN), String.valueOf(Cuarto.QUAD), String.valueOf(Cuarto.DOUBLE) }));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(Cuarto.values()));
        //jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Suite", "Single", "King", "Queen", "Double", "Quad" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "RoomNumber", "RoomType", "RoomCapacity", "Occupied"
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        CheckRoom.setText("Ver habitaciones disponibles");
        CheckRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckRoomActionPerformed(evt);
            }
        });

        Checkin.setText("Check In");
        Checkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckinActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(CheckRoom)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(Checkin)
                                                .addGap(81, 81, 81)
                                                .addComponent(CancelButton))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(CheckRoom)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Checkin)
                                        .addComponent(CancelButton))
                                .addContainerGap())
        );

        pack();
        setVisible(true);
    }// </editor-fold>

    private void CheckRoomActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try {
            DefaultTableModel dm = (DefaultTableModel)jTable1.getModel();
            dm.getDataVector().removeAllElements();
            dm.fireTableDataChanged();
            Connection connection = JavaDataBase.getConnection();
            String RoomTypeSelected = jComboBox1.getSelectedItem().toString();
            DatabaseSearch(connection, RoomTypeSelected, jTable1);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Couldn't print shit");
        }


    }

    private void CheckinActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try {
            int index = jTable1.getSelectedRow();
            TableModel model = jTable1.getModel();
            String roomnumber = model.getValueAt(index, 0).toString();
            String roomtype = model.getValueAt(index, 1).toString();
            String roomcapacity = model.getValueAt(index, 2).toString();
            // Room room = new Room(roomcapacity, roomnumber, roomtype);
            int roomnum = Integer.valueOf(roomnumber);
            int roomcap = Integer.valueOf(roomcapacity);
            Room room = new Room(roomcap, roomnum, roomtype);
            dispose();
            ReservationInterface reservationInterface = new ReservationInterface(room);
        }
        catch (IndexOutOfBoundsException exception)
        {
            JOptionPane.showMessageDialog(null, "No puedes reservar sin seleccionar un cuarto", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }


    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        MainMenu newframe = new MainMenu();
        newframe.setVisible(true);
        dispose();

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomChecker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomChecker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomChecker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomChecker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomChecker();
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton CheckRoom;
    private javax.swing.JButton Checkin;
    private javax.swing.JComboBox<Cuarto> jComboBox1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;


    @Override
    public void DatabaseSearch(Connection connection, String string, JTable table) {
        try {
            PreparedStatement statement = connection.prepareStatement("SELECT idRooms, Tipo, Capacidad, STATUS_USO from rooms where Tipo = ? and STATUS_USO = 'VACIO'");
            statement.setString(1, string);
            ResultSet rs = statement.executeQuery();
            while(rs.next())
            {
                String RoomNumber = String.valueOf(rs.getInt(1));
                String RT = rs.getString(2);
                String RoomCapacity = String.valueOf(rs.getInt(3));
                String available = rs.getString(4);

                String tbData[] = {RoomNumber, RT, RoomCapacity, available};
                DefaultTableModel tblModel = (DefaultTableModel) table.getModel();
                tblModel.addRow(tbData);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }
    // End of variables declaration
}
